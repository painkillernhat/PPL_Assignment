Program([
	FuncDecl(addBinary, StringType, [Param(a, StringType), Param(b, StringType)], None, BlockStmt([IfStmt(BinExpr(::, Id(b), BinExpr(>, FuncCall(size, []), BinExpr(::, Id(a), FuncCall(size, [])))), CallStmt(swap, Id(a), Id(b))), WhileStmt(BinExpr(::, Id(b), BinExpr(<, FuncCall(size, []), BinExpr(::, Id(a), FuncCall(size, [])))), AssignStmt(Id(b), BinExpr(+, StringLit(0), Id(b)))), VarDecl(carry, AutoType, IntegerLit(0)), VarDecl(res, AutoType, StringLit()), ForStmt(AssignStmt(Id(i), BinExpr(::, Id(b), BinExpr(-, FuncCall(size, []), IntegerLit(1)))), BinExpr(>=, Id(i), IntegerLit(0)), BinExpr(-, Id(i), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(==, ArrayCell(b, [Id(i)]), BinExpr(&&, StringLit(1), BinExpr(==, ArrayCell(a, [Id(i)]), StringLit(1)))), BlockStmt([IfStmt(BinExpr(==, Id(carry), IntegerLit(0)), AssignStmt(Id(res), BinExpr(+, StringLit(0), Id(res))), AssignStmt(Id(res), BinExpr(+, StringLit(1), Id(res)))), AssignStmt(Id(carry), IntegerLit(1))]), BlockStmt([IfStmt(BinExpr(==, ArrayCell(b, [Id(i)]), BinExpr(&&, StringLit(0), BinExpr(==, ArrayCell(a, [Id(i)]), StringLit(0)))), BlockStmt([IfStmt(BinExpr(==, Id(carry), IntegerLit(0)), AssignStmt(Id(res), BinExpr(+, StringLit(0), Id(res))), BlockStmt([AssignStmt(Id(res), BinExpr(+, StringLit(1), Id(res))), AssignStmt(Id(carry), IntegerLit(0))]))]))])), IfStmt(BinExpr(||, BinExpr(==, ArrayCell(b, [Id(i)]), BinExpr(&&, StringLit(0), BinExpr(==, ArrayCell(a, [Id(i)]), StringLit(1)))), BinExpr(==, ArrayCell(b, [Id(i)]), BinExpr(&&, StringLit(1), BinExpr(==, ArrayCell(a, [Id(i)]), StringLit(0))))), BlockStmt([IfStmt(BinExpr(==, Id(carry), IntegerLit(0)), AssignStmt(Id(res), BinExpr(+, StringLit(1), Id(res))), AssignStmt(Id(res), BinExpr(+, StringLit(0), Id(res))))]))])), IfStmt(BinExpr(==, Id(carry), IntegerLit(1)), AssignStmt(Id(res), BinExpr(+, StringLit(1), Id(res)))), ReturnStmt(Id(res))]))
])
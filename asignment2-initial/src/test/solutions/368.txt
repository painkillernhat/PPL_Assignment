Program([
	FuncDecl(power, FloatType, [Param(x, FloatType), Param(n, IntegerType)], None, BlockStmt([IfStmt(BinExpr(==, Id(n), IntegerLit(0)), BlockStmt([ReturnStmt(IntegerLit(1))])), ReturnStmt(BinExpr(*, Id(x), FuncCall(power, [Id(x), BinExpr(-, Id(n), IntegerLit(1))])))]))
	FuncDecl(myPow, FloatType, [Param(x, FloatType), Param(n, IntegerType)], power, BlockStmt([IfStmt(BinExpr(==, Id(n), Id(INT_MAX)), ReturnStmt(BinExpr(&&, BinExpr(==, Id(x), IntegerLit(1)), UnExpr(-, IntegerLit(1))))), IfStmt(BinExpr(==, Id(n), Id(INT_MIN)), ReturnStmt(BinExpr(&&, BinExpr(==, Id(x), BinExpr(||, IntegerLit(1), BinExpr(==, Id(x), UnExpr(-, IntegerLit(1))))), IntegerLit(1)))), VarDecl(num, FloatType, IntegerLit(1)), IfStmt(BinExpr(>=, Id(n), IntegerLit(0)), BlockStmt([AssignStmt(Id(num), FuncCall(power, [Id(x), Id(n)]))]), BlockStmt([AssignStmt(Id(n), UnExpr(-, Id(n))), AssignStmt(Id(num), FuncCall(power, [Id(x), Id(n)])), AssignStmt(Id(num), BinExpr(/, FloatLit(1e+20), Id(num)))])), ReturnStmt(Id(num))]))
])
Program([
	FuncDecl(change, StringType, [Param(input, StringType)], None, BlockStmt([VarDecl(len, FloatType, FuncCall(length, [])), VarDecl(end, StringType, StringLit()), ForStmt(AssignStmt(Id(i), IntegerLit(0)), BinExpr(<, Id(i), Id(len)), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(&&, BinExpr(>=, ArrayCell(input, [Id(i)]), IntegerLit(65)), BinExpr(<=, ArrayCell(input, [Id(i)]), IntegerLit(90))), BlockStmt([AssignStmt(Id(end), BinExpr(+, Id(end), ArrayCell(input, [Id(i)])))]), BlockStmt([IfStmt(BinExpr(==, ArrayCell(input, [Id(i)]), StringLit(#)), BlockStmt([IfStmt(BinExpr(==, Id(i), BinExpr(-, Id(len), IntegerLit(1))), BreakStmt()), VarDecl(j, IntegerType, BinExpr(+, Id(i), IntegerLit(1))), WhileStmt(BinExpr(&&, BinExpr(>=, ArrayCell(input, [Id(j)]), IntegerLit(65)), BinExpr(<=, ArrayCell(input, [Id(j)]), IntegerLit(90))), BlockStmt([AssignStmt(Id(end), BinExpr(+, Id(end), ArrayCell(input, [Id(j)]))), AssignStmt(Id(j), BinExpr(+, Id(j), IntegerLit(1)))])), AssignStmt(Id(i), BinExpr(-, Id(j), IntegerLit(1)))]))])), IfStmt(BinExpr(==, ArrayCell(input, [Id(i)]), StringLit(@)), BlockStmt([IfStmt(BinExpr(==, Id(i), Id(len)), BreakStmt()), VarDecl(j, IntegerType, BinExpr(+, Id(i), IntegerLit(1))), VarDecl(temp, StringType, StringLit()), WhileStmt(BinExpr(&&, BinExpr(&&, BinExpr(!=, ArrayCell(input, [Id(j)]), StringLit(#)), BinExpr(!=, ArrayCell(input, [Id(j)]), StringLit(@))), BinExpr(!=, ArrayCell(input, [Id(j)]), StringLit(\n))), BlockStmt([AssignStmt(Id(temp), BinExpr(+, ArrayCell(input, [Id(j)]), Id(temp))), AssignStmt(Id(j), BinExpr(+, Id(j), IntegerLit(1)))])), AssignStmt(Id(end), BinExpr(+, Id(end), Id(temp))), AssignStmt(Id(i), BinExpr(-, Id(j), IntegerLit(1)))]), BlockStmt([BreakStmt()]))])), ReturnStmt(Id(end))]))
])
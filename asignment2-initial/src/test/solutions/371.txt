Program([
	FuncDecl(multiply, StringType, [Param(num1, StringType), OutParam(num2, StringType)], None, BlockStmt([IfStmt(BinExpr(==, Id(num1), BinExpr(||, StringLit(0), BinExpr(==, Id(num2), StringLit(0)))), ReturnStmt(StringLit(0))), VarDecl(res, ArrayType([100], IntegerType), ArrayLit([BinExpr(::, BinExpr(+, FuncCall(size, []), Id(num2)), FuncCall(size, [])), IntegerLit(0)])), ForStmt(AssignStmt(Id(i), BinExpr(::, Id(num1), BinExpr(-, FuncCall(size, []), IntegerLit(1)))), BinExpr(>=, Id(i), IntegerLit(0)), BinExpr(-, Id(i), IntegerLit(1)), BlockStmt([ForStmt(AssignStmt(Id(j), BinExpr(::, Id(num2), BinExpr(-, FuncCall(size, []), IntegerLit(1)))), BinExpr(>=, Id(j), IntegerLit(0)), BinExpr(-, Id(j), IntegerLit(1)), BlockStmt([AssignStmt(ArrayCell(res, [BinExpr(+, BinExpr(+, Id(i), Id(j)), IntegerLit(1))]), BinExpr(+, ArrayCell(res, [BinExpr(+, BinExpr(+, Id(i), Id(j)), IntegerLit(1))]), BinExpr(*, BinExpr(-, ArrayCell(num1, [Id(i)]), StringLit(0)), BinExpr(-, ArrayCell(num2, [Id(j)]), StringLit(0))))), AssignStmt(ArrayCell(res, [BinExpr(+, Id(i), Id(j))]), BinExpr(+, ArrayCell(res, [BinExpr(+, Id(i), Id(j))]), BinExpr(/, ArrayCell(res, [BinExpr(+, BinExpr(+, Id(i), Id(j)), IntegerLit(1))]), IntegerLit(10)))), AssignStmt(ArrayCell(res, [BinExpr(+, BinExpr(+, Id(i), Id(j)), IntegerLit(1))]), BinExpr(%, ArrayCell(res, [BinExpr(+, BinExpr(+, Id(i), Id(j)), IntegerLit(1))]), IntegerLit(10)))]))])), VarDecl(i, AutoType, IntegerLit(0)), VarDecl(ans, AutoType, StringLit()), WhileStmt(BinExpr(==, ArrayCell(res, [Id(i)]), IntegerLit(0)), AssignStmt(Id(i), BinExpr(+, Id(i), IntegerLit(1)))), WhileStmt(BinExpr(::, BinExpr(<, Id(i), Id(res)), FuncCall(size, [])), AssignStmt(Id(ans), BinExpr(+, Id(ans), FuncCall(to_string, [ArrayCell(res, [BinExpr(+, Id(i), IntegerLit(1))])])))), ReturnStmt(Id(ans))]))
])